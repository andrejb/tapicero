{
   "views" : {
      "get" : {
         "map" : "function(doc) {\n    if (doc.u1db_rev) {\n        var is_tombstone = true;\n        var has_conflicts = false;\n        if (doc._attachments) {\n            if (doc._attachments.u1db_content)\n                is_tombstone = false;\n            if (doc._attachments.u1db_conflicts)\n                has_conflicts = true;\n        }\n        emit(doc._id,\n            {\n                \"couch_rev\": doc._rev,\n                \"u1db_rev\": doc.u1db_rev,\n                \"is_tombstone\": is_tombstone,\n                \"has_conflicts\": has_conflicts,\n            }\n        );\n    }\n}\n"
      }
   },
   "_id" : "_design/docs",
   "updates" : {
      "resolve_doc" : "function(doc, req){\n    /* we expect to receive the following in `req.body`:\n     * {\n     *     'couch_rev': '<couch_rev>',\n     *     'conflicts': '<base64 encoded conflicts>',\n     * }\n     */\n    var body = JSON.parse(req.body);\n\n    // fail if no document was given\n    if (!doc) {\n        return [null, 'document does not exist']\n    } \n\n    // fail if couch revisions do not match\n    if (body['couch_rev'] != null\n        && doc['_rev'] != body['couch_rev']) {\n        return [null, 'revision conflict']\n    }\n\n    // fail if conflicts were not sent\n    if (body['conflicts'] == null)\n        return [null, 'missing conflicts']\n\n    // save conflicts as attachment if they were sent\n    if (body['conflicts'] != null) {\n        if (!doc._attachments)\n            doc._attachments = {};\n        doc._attachments.u1db_conflicts = {\n            content_type: \"application/octet-stream\",\n            data: body['conflicts']  // should be base64 encoded\n        }\n    }\n    // or delete attachment if there are no conflicts\n    else if (doc._attachments && doc._attachments.u1db_conflicts)\n        delete doc._attachments.u1db_conflicts;\n\n    return [doc, 'ok'];\n}\n",
      "put" : "function(doc, req){\n    /* we expect to receive the following in `req.body`:\n     * {\n     *     'couch_rev': '<couch_rev>',\n     *     'u1db_rev': '<u1db_rev>',\n     *     'content': '<base64 encoded content>',\n     *     'trans_id': '<reansaction_id>'\n     *     'conflicts': '<base64 encoded conflicts>',\n     *     'update_conflicts': <boolean>\n     * }\n     */\n    var body = JSON.parse(req.body);\n\n    // create a new document document\n    if (!doc) {\n        doc = {}\n        doc['_id'] = req['id'];\n    }\n    // or fail if couch revisions do not match\n    else if (doc['_rev'] != body['couch_rev']) {\n        // of fail if revisions do not match\n        return [null, 'revision conflict']\n    }\n\n    // store u1db rev\n    doc.u1db_rev = body['u1db_rev'];\n\n    // save content as attachment\n    if (body['content'] != null) {\n        // save u1db content as attachment\n        if (!doc._attachments)\n            doc._attachments = {};\n        doc._attachments.u1db_content =  {\n            content_type: \"application/octet-stream\",\n            data: body['content']  // should be base64 encoded\n        };\n    }\n    // or delete the attachment if document is tombstone\n    else if (doc._attachments &&\n             doc._attachments.u1db_content)\n        delete doc._attachments.u1db_content;\n\n    // store the transaction id\n    if (!doc.u1db_transactions)\n        doc.u1db_transactions = [];\n    var d = new Date();\n    doc.u1db_transactions.push([d.getTime(), body['trans_id']]);\n\n    // save conflicts as attachment if they were sent\n    if (body['update_conflicts'])\n        if (body['conflicts'] != null) {\n            if (!doc._attachments)\n                doc._attachments = {};\n            doc._attachments.u1db_conflicts = {\n                content_type: \"application/octet-stream\",\n                data: body['conflicts']  // should be base64 encoded\n            }\n        } else {\n            if(doc._attachments && doc._attachments.u1db_conflicts)\n                delete doc._attachments.u1db_conflicts\n        }\n\n    return [doc, 'ok'];\n}\n"
   }
}
